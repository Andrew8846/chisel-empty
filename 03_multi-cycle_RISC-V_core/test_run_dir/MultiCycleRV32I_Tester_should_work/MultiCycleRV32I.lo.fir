circuit MultiCycleRV32I :
  module MultiCycleRV32Icore :
    input clock : Clock
    input reset : UInt<1>
    output io_check_res : UInt<32>

    mem IMem : @[core.scala 74:17]
      data-type => UInt<32>
      depth => 4096
      read-latency => 0
      write-latency => 1
      reader => instr_MPORT
      read-under-write => undefined
    mem regFile : @[core.scala 83:20]
      data-type => UInt<32>
      depth => 32
      read-latency => 0
      write-latency => 1
      reader => operandA_MPORT
      reader => operandB_MPORT
      writer => MPORT
      writer => MPORT_1
      read-under-write => undefined
    reg stage : UInt<3>, clock with :
      reset => (UInt<1>("h0"), stage) @[core.scala 67:22]
    reg pc : UInt<32>, clock with :
      reset => (UInt<1>("h0"), pc) @[core.scala 81:19]
    reg instr : UInt<32>, clock with :
      reset => (UInt<1>("h0"), instr) @[core.scala 93:22]
    reg isADD : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isADD) @[core.scala 94:22]
    reg isSUB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSUB) @[core.scala 95:22]
    reg isSLL : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSLL) @[core.scala 96:22]
    reg isSRL : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSRL) @[core.scala 97:22]
    reg isSRA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSRA) @[core.scala 98:22]
    reg isXOR : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isXOR) @[core.scala 99:22]
    reg isOR : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isOR) @[core.scala 100:21]
    reg isAND : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isAND) @[core.scala 101:22]
    reg isADDI : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isADDI) @[core.scala 102:23]
    reg isSLT : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSLT) @[core.scala 103:22]
    reg isSLTU : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isSLTU) @[core.scala 104:23]
    reg rd : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd) @[core.scala 109:23]
    reg imm : UInt<12>, clock with :
      reset => (UInt<1>("h0"), imm) @[core.scala 118:20]
    reg operandA : UInt<32>, clock with :
      reset => (UInt<1>("h0"), operandA) @[core.scala 122:25]
    reg operandB : UInt<32>, clock with :
      reset => (UInt<1>("h0"), operandB) @[core.scala 123:25]
    reg aluResult : UInt<32>, clock with :
      reset => (UInt<1>("h0"), aluResult) @[core.scala 124:26]
    node _T = eq(stage, UInt<3>("h0")) @[core.scala 135:15]
    node _instr_T = dshr(pc, UInt<2>("h2")) @[core.scala 138:21]
    node _instr_T_1 = bits(_instr_T, 11, 0) @[core.scala 138:18]
    node _T_1 = eq(stage, UInt<3>("h1")) @[core.scala 142:22]
    node _opcode_T = bits(instr, 6, 0) @[core.scala 144:20]
    node _rd_T = bits(instr, 11, 7) @[core.scala 145:20]
    node _funct3_T = bits(instr, 14, 12) @[core.scala 146:20]
    node _rs1_T = bits(instr, 19, 15) @[core.scala 147:20]
    node _rs2_T = bits(instr, 24, 20) @[core.scala 148:20]
    node _funct7_T = bits(instr, 31, 25) @[core.scala 149:20]
    node _imm_T = bits(instr, 31, 20) @[core.scala 150:17]
    node _GEN_39 = mux(_T_1, _opcode_T, UInt<7>("h0")) @[core.scala 108:10 143:3 144:12]
    node _GEN_78 = mux(_T, UInt<7>("h0"), _GEN_39) @[core.scala 108:10 136:3]
    node opcode = _GEN_78 @[core.scala 107:20]
    node _isADD_T = eq(opcode, UInt<6>("h33")) @[core.scala 152:23]
    node _GEN_41 = mux(_T_1, _funct3_T, UInt<3>("h0")) @[core.scala 111:10 143:3 146:12]
    node _GEN_80 = mux(_T, UInt<3>("h0"), _GEN_41) @[core.scala 111:10 136:3]
    node funct3 = _GEN_80 @[core.scala 110:20]
    node _isADD_T_1 = eq(funct3, UInt<1>("h0")) @[core.scala 152:50]
    node _isADD_T_2 = and(_isADD_T, _isADD_T_1) @[core.scala 152:40]
    node _GEN_44 = mux(_T_1, _funct7_T, UInt<7>("h0")) @[core.scala 117:10 143:3 149:12]
    node _GEN_83 = mux(_T, UInt<7>("h0"), _GEN_44) @[core.scala 117:10 136:3]
    node funct7 = _GEN_83 @[core.scala 116:20]
    node _isADD_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 152:73]
    node _isADD_T_4 = and(_isADD_T_2, _isADD_T_3) @[core.scala 152:63]
    node _isSUB_T = eq(opcode, UInt<6>("h33")) @[core.scala 153:23]
    node _isSUB_T_1 = eq(funct3, UInt<1>("h0")) @[core.scala 153:50]
    node _isSUB_T_2 = and(_isSUB_T, _isSUB_T_1) @[core.scala 153:40]
    node _isSUB_T_3 = eq(funct7, UInt<6>("h20")) @[core.scala 153:73]
    node _isSUB_T_4 = and(_isSUB_T_2, _isSUB_T_3) @[core.scala 153:63]
    node _isSLL_T = eq(opcode, UInt<6>("h33")) @[core.scala 154:23]
    node _isSLL_T_1 = eq(funct3, UInt<1>("h1")) @[core.scala 154:50]
    node _isSLL_T_2 = and(_isSLL_T, _isSLL_T_1) @[core.scala 154:40]
    node _isSLL_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 154:73]
    node _isSLL_T_4 = and(_isSLL_T_2, _isSLL_T_3) @[core.scala 154:63]
    node _isSRL_T = eq(opcode, UInt<6>("h33")) @[core.scala 155:23]
    node _isSRL_T_1 = eq(funct3, UInt<3>("h5")) @[core.scala 155:50]
    node _isSRL_T_2 = and(_isSRL_T, _isSRL_T_1) @[core.scala 155:40]
    node _isSRL_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 155:73]
    node _isSRL_T_4 = and(_isSRL_T_2, _isSRL_T_3) @[core.scala 155:63]
    node _isSRA_T = eq(opcode, UInt<6>("h33")) @[core.scala 156:23]
    node _isSRA_T_1 = eq(funct3, UInt<3>("h5")) @[core.scala 156:50]
    node _isSRA_T_2 = and(_isSRA_T, _isSRA_T_1) @[core.scala 156:40]
    node _isSRA_T_3 = eq(funct7, UInt<6>("h20")) @[core.scala 156:73]
    node _isSRA_T_4 = and(_isSRA_T_2, _isSRA_T_3) @[core.scala 156:63]
    node _isXOR_T = eq(opcode, UInt<6>("h33")) @[core.scala 157:23]
    node _isXOR_T_1 = eq(funct3, UInt<3>("h4")) @[core.scala 157:50]
    node _isXOR_T_2 = and(_isXOR_T, _isXOR_T_1) @[core.scala 157:40]
    node _isXOR_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 157:73]
    node _isXOR_T_4 = and(_isXOR_T_2, _isXOR_T_3) @[core.scala 157:63]
    node _isOR_T = eq(opcode, UInt<6>("h33")) @[core.scala 158:23]
    node _isOR_T_1 = eq(funct3, UInt<3>("h6")) @[core.scala 158:50]
    node _isOR_T_2 = and(_isOR_T, _isOR_T_1) @[core.scala 158:40]
    node _isOR_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 158:73]
    node _isOR_T_4 = and(_isOR_T_2, _isOR_T_3) @[core.scala 158:63]
    node _isAND_T = eq(opcode, UInt<6>("h33")) @[core.scala 159:23]
    node _isAND_T_1 = eq(funct3, UInt<3>("h7")) @[core.scala 159:50]
    node _isAND_T_2 = and(_isAND_T, _isAND_T_1) @[core.scala 159:40]
    node _isAND_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 159:73]
    node _isAND_T_4 = and(_isAND_T_2, _isAND_T_3) @[core.scala 159:63]
    node _isSLT_T = eq(opcode, UInt<6>("h33")) @[core.scala 160:23]
    node _isSLT_T_1 = eq(funct3, UInt<2>("h2")) @[core.scala 160:50]
    node _isSLT_T_2 = and(_isSLT_T, _isSLT_T_1) @[core.scala 160:40]
    node _isSLT_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 160:73]
    node _isSLT_T_4 = and(_isSLT_T_2, _isSLT_T_3) @[core.scala 160:63]
    node _isSLTU_T = eq(opcode, UInt<6>("h33")) @[core.scala 161:24]
    node _isSLTU_T_1 = eq(funct3, UInt<2>("h3")) @[core.scala 161:51]
    node _isSLTU_T_2 = and(_isSLTU_T, _isSLTU_T_1) @[core.scala 161:41]
    node _isSLTU_T_3 = eq(funct7, UInt<1>("h0")) @[core.scala 161:74]
    node _isSLTU_T_4 = and(_isSLTU_T_2, _isSLTU_T_3) @[core.scala 161:64]
    node _isADDI_T = eq(opcode, UInt<5>("h13")) @[core.scala 163:23]
    node _isADDI_T_1 = eq(funct3, UInt<1>("h0")) @[core.scala 163:50]
    node _isADDI_T_2 = and(_isADDI_T, _isADDI_T_1) @[core.scala 163:40]
    node _T_2 = eq(stage, UInt<3>("h2")) @[core.scala 171:22]
    node _aluResult_T = add(operandA, imm) @[core.scala 175:29]
    node _aluResult_T_1 = tail(_aluResult_T, 1) @[core.scala 175:29]
    node _aluResult_T_2 = add(operandA, operandB) @[core.scala 177:29]
    node _aluResult_T_3 = tail(_aluResult_T_2, 1) @[core.scala 177:29]
    node _aluResult_T_4 = sub(operandA, operandB) @[core.scala 179:29]
    node _aluResult_T_5 = tail(_aluResult_T_4, 1) @[core.scala 179:29]
    node _aluResult_T_6 = and(operandA, operandB) @[core.scala 181:29]
    node _aluResult_T_7 = or(operandA, operandB) @[core.scala 183:29]
    node _aluResult_T_8 = xor(operandA, operandB) @[core.scala 185:29]
    node _aluResult_T_9 = bits(operandB, 4, 0) @[core.scala 187:40]
    node _aluResult_T_10 = dshl(operandA, _aluResult_T_9) @[core.scala 187:29]
    node _aluResult_T_11 = bits(operandB, 4, 0) @[core.scala 189:40]
    node _aluResult_T_12 = dshr(operandA, _aluResult_T_11) @[core.scala 189:29]
    node _aluResult_T_13 = asSInt(operandA) @[core.scala 191:30]
    node _aluResult_T_14 = bits(operandB, 4, 0) @[core.scala 191:48]
    node _aluResult_T_15 = dshr(_aluResult_T_13, _aluResult_T_14) @[core.scala 191:37]
    node _aluResult_T_16 = asUInt(_aluResult_T_15) @[core.scala 191:56]
    node _aluResult_T_17 = lt(operandA, operandB) @[core.scala 193:33]
    node _aluResult_T_18 = mux(_aluResult_T_17, UInt<1>("h1"), UInt<1>("h0")) @[core.scala 193:23]
    node _aluResult_T_19 = asSInt(operandA) @[core.scala 195:33]
    node _aluResult_T_20 = asSInt(operandB) @[core.scala 195:51]
    node _aluResult_T_21 = lt(_aluResult_T_19, _aluResult_T_20) @[core.scala 195:40]
    node _aluResult_T_22 = mux(_aluResult_T_21, UInt<1>("h1"), UInt<1>("h0")) @[core.scala 195:23]
    node _GEN_0 = mux(isSLT, _aluResult_T_22, UInt<32>("hffffffff")) @[core.scala 194:22 195:17 197:17]
    node _GEN_1 = mux(isSLTU, _aluResult_T_18, _GEN_0) @[core.scala 192:23 193:17]
    node _GEN_2 = mux(isSRA, _aluResult_T_16, _GEN_1) @[core.scala 190:23 191:17]
    node _GEN_3 = mux(isSRL, _aluResult_T_12, _GEN_2) @[core.scala 188:23 189:17]
    node _GEN_4 = mux(isSLL, _aluResult_T_10, _GEN_3) @[core.scala 186:23 187:17]
    node _GEN_5 = mux(isXOR, _aluResult_T_8, _GEN_4) @[core.scala 184:22 185:17]
    node _GEN_6 = mux(isOR, _aluResult_T_7, _GEN_5) @[core.scala 182:22 183:17]
    node _GEN_7 = mux(isAND, _aluResult_T_6, _GEN_6) @[core.scala 180:23 181:17]
    node _GEN_8 = mux(isSUB, _aluResult_T_5, _GEN_7) @[core.scala 178:23 179:17]
    node _GEN_9 = mux(isADD, _aluResult_T_3, _GEN_8) @[core.scala 176:23 177:17]
    node _GEN_10 = mux(isADDI, _aluResult_T_1, _GEN_9) @[core.scala 174:18 175:17]
    node _T_3 = eq(stage, UInt<3>("h3")) @[core.scala 204:22]
    node _T_4 = eq(stage, UInt<3>("h4")) @[core.scala 216:22]
    node _pc_T = add(pc, UInt<3>("h4")) @[core.scala 228:14]
    node _pc_T_1 = tail(_pc_T, 1) @[core.scala 228:14]
    node _T_5 = asUInt(reset) @[core.scala 237:12]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[core.scala 237:12]
    node _T_7 = eq(UInt<1>("h1"), UInt<1>("h0")) @[core.scala 237:12]
    node _GEN_11 = mux(_T_4, aluResult, UInt<32>("h0")) @[core.scala 120:17 217:3 219:19]
    node _GEN_12 = validif(_T_4, rd) @[core.scala 217:3 221:12]
    node _GEN_13 = validif(_T_4, clock) @[core.scala 217:3 221:12]
    node _GEN_14 = mux(_T_4, UInt<1>("h1"), UInt<1>("h0")) @[core.scala 217:3 221:12 83:20]
    node _GEN_15 = validif(_T_4, UInt<1>("h1")) @[core.scala 217:3 221:17]
    node _GEN_21 = mux(_T_3, UInt<32>("h0"), _GEN_11) @[core.scala 120:17 205:3]
    node _GEN_31 = mux(_T_2, UInt<32>("h0"), _GEN_21) @[core.scala 120:17 172:3]
    node _GEN_65 = mux(_T_1, UInt<32>("h0"), _GEN_31) @[core.scala 120:17 143:3]
    node _GEN_103 = mux(_T, UInt<32>("h0"), _GEN_65) @[core.scala 120:17 136:3]
    node writeBackData = _GEN_103 @[core.scala 119:27]
    node _GEN_16 = validif(_T_4, writeBackData) @[core.scala 217:3 221:17]
    node _GEN_17 = mux(_T_4, writeBackData, UInt<32>("h0")) @[core.scala 217:3 224:18 68:16]
    node _GEN_18 = mux(_T_4, _pc_T_1, pc) @[core.scala 217:3 228:8 81:19]
    node _GEN_19 = mux(_T_4, UInt<3>("h0"), stage) @[core.scala 217:3 229:11 67:22]
    node _GEN_20 = mux(_T_3, UInt<3>("h4"), _GEN_19) @[core.scala 205:3 213:11]
    node _GEN_22 = validif(eq(_T_3, UInt<1>("h0")), _GEN_12) @[core.scala 205:3]
    node _GEN_23 = validif(eq(_T_3, UInt<1>("h0")), _GEN_13) @[core.scala 205:3]
    node _GEN_24 = mux(_T_3, UInt<1>("h0"), _GEN_14) @[core.scala 205:3 83:20]
    node _GEN_25 = validif(eq(_T_3, UInt<1>("h0")), _GEN_15) @[core.scala 205:3]
    node _GEN_26 = validif(eq(_T_3, UInt<1>("h0")), _GEN_16) @[core.scala 205:3]
    node _GEN_27 = mux(_T_3, UInt<32>("h0"), _GEN_17) @[core.scala 205:3 68:16]
    node _GEN_28 = mux(_T_3, pc, _GEN_18) @[core.scala 205:3 81:19]
    node _GEN_29 = mux(_T_2, _GEN_10, aluResult) @[core.scala 124:26 172:3]
    node _GEN_30 = mux(_T_2, UInt<3>("h3"), _GEN_20) @[core.scala 172:3 201:11]
    node _GEN_32 = validif(eq(_T_2, UInt<1>("h0")), _GEN_22) @[core.scala 172:3]
    node _GEN_33 = validif(eq(_T_2, UInt<1>("h0")), _GEN_23) @[core.scala 172:3]
    node _GEN_34 = mux(_T_2, UInt<1>("h0"), _GEN_24) @[core.scala 172:3 83:20]
    node _GEN_35 = validif(eq(_T_2, UInt<1>("h0")), _GEN_25) @[core.scala 172:3]
    node _GEN_36 = validif(eq(_T_2, UInt<1>("h0")), _GEN_26) @[core.scala 172:3]
    node _GEN_37 = mux(_T_2, UInt<32>("h0"), _GEN_27) @[core.scala 172:3 68:16]
    node _GEN_38 = mux(_T_2, pc, _GEN_28) @[core.scala 172:3 81:19]
    node _GEN_40 = mux(_T_1, _rd_T, rd) @[core.scala 143:3 145:12 109:23]
    node _GEN_42 = mux(_T_1, _rs1_T, UInt<5>("h0")) @[core.scala 143:3 147:12 113:7]
    node _GEN_43 = mux(_T_1, _rs2_T, UInt<5>("h0")) @[core.scala 143:3 148:12 115:7]
    node _GEN_45 = mux(_T_1, _imm_T, imm) @[core.scala 118:20 143:3 150:9]
    node _GEN_46 = mux(_T_1, _isADD_T_4, isADD) @[core.scala 143:3 152:12 94:22]
    node _GEN_47 = mux(_T_1, _isSUB_T_4, isSUB) @[core.scala 143:3 153:12 95:22]
    node _GEN_48 = mux(_T_1, _isSLL_T_4, isSLL) @[core.scala 143:3 154:12 96:22]
    node _GEN_49 = mux(_T_1, _isSRL_T_4, isSRL) @[core.scala 143:3 155:12 97:22]
    node _GEN_50 = mux(_T_1, _isSRA_T_4, isSRA) @[core.scala 143:3 156:12 98:22]
    node _GEN_51 = mux(_T_1, _isXOR_T_4, isXOR) @[core.scala 143:3 157:12 99:22]
    node _GEN_52 = mux(_T_1, _isOR_T_4, isOR) @[core.scala 143:3 158:12 100:21]
    node _GEN_53 = mux(_T_1, _isAND_T_4, isAND) @[core.scala 143:3 159:12 101:22]
    node _GEN_54 = mux(_T_1, _isSLT_T_4, isSLT) @[core.scala 143:3 160:12 103:22]
    node _GEN_55 = mux(_T_1, _isSLTU_T_4, isSLTU) @[core.scala 143:3 161:13 104:23]
    node _GEN_56 = mux(_T_1, _isADDI_T_2, isADDI) @[core.scala 143:3 163:12 102:23]
    node _GEN_81 = mux(_T, UInt<5>("h0"), _GEN_42) @[core.scala 136:3 113:7]
    node rs1 = _GEN_81 @[core.scala 112:20]
    node _GEN_57 = validif(_T_1, rs1) @[core.scala 143:3 165:24]
    node _GEN_58 = validif(_T_1, clock) @[core.scala 143:3 165:24]
    node _GEN_59 = mux(_T_1, UInt<1>("h1"), UInt<1>("h0")) @[core.scala 143:3 165:24 83:20]
    node _GEN_60 = mux(_T_1, regFile.operandA_MPORT.data, operandA) @[core.scala 143:3 165:14 122:25]
    node _GEN_82 = mux(_T, UInt<5>("h0"), _GEN_43) @[core.scala 136:3 115:7]
    node rs2 = _GEN_82 @[core.scala 114:20]
    node _GEN_61 = validif(_T_1, rs2) @[core.scala 143:3 166:24]
    node _GEN_62 = mux(_T_1, regFile.operandB_MPORT.data, operandB) @[core.scala 143:3 166:14 123:25]
    node _GEN_63 = mux(_T_1, UInt<3>("h2"), _GEN_30) @[core.scala 143:3 168:11]
    node _GEN_64 = mux(_T_1, aluResult, _GEN_29) @[core.scala 124:26 143:3]
    node _GEN_66 = validif(eq(_T_1, UInt<1>("h0")), _GEN_32) @[core.scala 143:3]
    node _GEN_67 = validif(eq(_T_1, UInt<1>("h0")), _GEN_33) @[core.scala 143:3]
    node _GEN_68 = mux(_T_1, UInt<1>("h0"), _GEN_34) @[core.scala 143:3 83:20]
    node _GEN_69 = validif(eq(_T_1, UInt<1>("h0")), _GEN_35) @[core.scala 143:3]
    node _GEN_70 = validif(eq(_T_1, UInt<1>("h0")), _GEN_36) @[core.scala 143:3]
    node _GEN_71 = mux(_T_1, UInt<32>("h0"), _GEN_37) @[core.scala 143:3 68:16]
    node _GEN_72 = mux(_T_1, pc, _GEN_38) @[core.scala 143:3 81:19]
    node _GEN_73 = validif(_T, _instr_T_1) @[core.scala 136:3 138:18]
    node _GEN_74 = validif(_T, clock) @[core.scala 136:3 138:18]
    node _GEN_75 = mux(_T, UInt<1>("h1"), UInt<1>("h0")) @[core.scala 136:3 138:18 74:17]
    node _GEN_76 = mux(_T, IMem.instr_MPORT.data, instr) @[core.scala 136:3 138:11 93:22]
    node _GEN_77 = mux(_T, UInt<3>("h1"), _GEN_63) @[core.scala 136:3 139:11]
    node _GEN_79 = mux(_T, rd, _GEN_40) @[core.scala 109:23 136:3]
    node _GEN_84 = mux(_T, imm, _GEN_45) @[core.scala 118:20 136:3]
    node _GEN_85 = mux(_T, isADD, _GEN_46) @[core.scala 136:3 94:22]
    node _GEN_86 = mux(_T, isSUB, _GEN_47) @[core.scala 136:3 95:22]
    node _GEN_87 = mux(_T, isSLL, _GEN_48) @[core.scala 136:3 96:22]
    node _GEN_88 = mux(_T, isSRL, _GEN_49) @[core.scala 136:3 97:22]
    node _GEN_89 = mux(_T, isSRA, _GEN_50) @[core.scala 136:3 98:22]
    node _GEN_90 = mux(_T, isXOR, _GEN_51) @[core.scala 136:3 99:22]
    node _GEN_91 = mux(_T, isOR, _GEN_52) @[core.scala 100:21 136:3]
    node _GEN_92 = mux(_T, isAND, _GEN_53) @[core.scala 101:22 136:3]
    node _GEN_93 = mux(_T, isSLT, _GEN_54) @[core.scala 103:22 136:3]
    node _GEN_94 = mux(_T, isSLTU, _GEN_55) @[core.scala 104:23 136:3]
    node _GEN_95 = mux(_T, isADDI, _GEN_56) @[core.scala 102:23 136:3]
    node _GEN_96 = validif(eq(_T, UInt<1>("h0")), _GEN_57) @[core.scala 136:3]
    node _GEN_97 = validif(eq(_T, UInt<1>("h0")), _GEN_58) @[core.scala 136:3]
    node _GEN_98 = mux(_T, UInt<1>("h0"), _GEN_59) @[core.scala 136:3 83:20]
    node _GEN_99 = mux(_T, operandA, _GEN_60) @[core.scala 122:25 136:3]
    node _GEN_100 = validif(eq(_T, UInt<1>("h0")), _GEN_61) @[core.scala 136:3]
    node _GEN_101 = mux(_T, operandB, _GEN_62) @[core.scala 123:25 136:3]
    node _GEN_102 = mux(_T, aluResult, _GEN_64) @[core.scala 124:26 136:3]
    node _GEN_104 = validif(eq(_T, UInt<1>("h0")), _GEN_66) @[core.scala 136:3]
    node _GEN_105 = validif(eq(_T, UInt<1>("h0")), _GEN_67) @[core.scala 136:3]
    node _GEN_106 = mux(_T, UInt<1>("h0"), _GEN_68) @[core.scala 136:3 83:20]
    node _GEN_107 = validif(eq(_T, UInt<1>("h0")), _GEN_69) @[core.scala 136:3]
    node _GEN_108 = validif(eq(_T, UInt<1>("h0")), _GEN_70) @[core.scala 136:3]
    node _GEN_109 = mux(_T, UInt<32>("h0"), _GEN_71) @[core.scala 136:3 68:16]
    node _GEN_110 = mux(_T, pc, _GEN_72) @[core.scala 136:3 81:19]
    io_check_res <= _GEN_109
    stage <= mux(reset, UInt<3>("h0"), _GEN_77) @[core.scala 67:{22,22}]
    IMem.instr_MPORT.addr <= _GEN_73
    IMem.instr_MPORT.en <= _GEN_75
    IMem.instr_MPORT.clk <= _GEN_74
    pc <= mux(reset, UInt<32>("h0"), _GEN_110) @[core.scala 81:{19,19}]
    regFile.operandA_MPORT.addr <= _GEN_96
    regFile.operandA_MPORT.en <= _GEN_98
    regFile.operandA_MPORT.clk <= _GEN_97
    regFile.operandB_MPORT.addr <= _GEN_100
    regFile.operandB_MPORT.en <= _GEN_98
    regFile.operandB_MPORT.clk <= _GEN_97
    regFile.MPORT.addr <= UInt<5>("h0") @[core.scala 84:10]
    regFile.MPORT.en <= UInt<1>("h1") @[core.scala 84:10]
    regFile.MPORT.clk <= clock @[core.scala 84:10]
    regFile.MPORT.data <= UInt<32>("h0") @[core.scala 84:14]
    regFile.MPORT.mask <= UInt<1>("h1") @[core.scala 84:14]
    regFile.MPORT_1.addr <= _GEN_104
    regFile.MPORT_1.en <= _GEN_106
    regFile.MPORT_1.clk <= _GEN_105
    regFile.MPORT_1.data <= _GEN_108
    regFile.MPORT_1.mask <= _GEN_107
    instr <= mux(reset, UInt<32>("h0"), _GEN_76) @[core.scala 93:{22,22}]
    isADD <= mux(reset, UInt<1>("h0"), _GEN_85) @[core.scala 94:{22,22}]
    isSUB <= mux(reset, UInt<1>("h0"), _GEN_86) @[core.scala 95:{22,22}]
    isSLL <= mux(reset, UInt<1>("h0"), _GEN_87) @[core.scala 96:{22,22}]
    isSRL <= mux(reset, UInt<1>("h0"), _GEN_88) @[core.scala 97:{22,22}]
    isSRA <= mux(reset, UInt<1>("h0"), _GEN_89) @[core.scala 98:{22,22}]
    isXOR <= mux(reset, UInt<1>("h0"), _GEN_90) @[core.scala 99:{22,22}]
    isOR <= mux(reset, UInt<1>("h0"), _GEN_91) @[core.scala 100:{21,21}]
    isAND <= mux(reset, UInt<1>("h0"), _GEN_92) @[core.scala 101:{22,22}]
    isADDI <= mux(reset, UInt<1>("h0"), _GEN_95) @[core.scala 102:{23,23}]
    isSLT <= mux(reset, UInt<1>("h0"), _GEN_93) @[core.scala 103:{22,22}]
    isSLTU <= mux(reset, UInt<1>("h0"), _GEN_94) @[core.scala 104:{23,23}]
    rd <= mux(reset, UInt<5>("h0"), _GEN_79) @[core.scala 109:{23,23}]
    imm <= mux(reset, UInt<12>("h0"), _GEN_84) @[core.scala 118:{20,20}]
    operandA <= mux(reset, UInt<32>("h0"), _GEN_99) @[core.scala 122:{25,25}]
    operandB <= mux(reset, UInt<32>("h0"), _GEN_101) @[core.scala 123:{25,25}]
    aluResult <= bits(mux(reset, UInt<32>("h0"), _GEN_102), 31, 0) @[core.scala 124:{26,26}]
    assert(clock, UInt<1>("h1"), and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_2, UInt<1>("h0"))), eq(_T_3, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), _T_6), UInt<1>("h1")), "") : assert @[core.scala 237:12]
    printf(clock, and(and(and(and(and(and(and(and(UInt<1>("h1"), eq(_T, UInt<1>("h0"))), eq(_T_1, UInt<1>("h0"))), eq(_T_2, UInt<1>("h0"))), eq(_T_3, UInt<1>("h0"))), eq(_T_4, UInt<1>("h0"))), _T_6), _T_7), UInt<1>("h1")), "Assertion failed: Pipeline FSM must never be left\n    at core.scala:237 assert(true.B, \"Pipeline FSM must never be left\")\n") : printf @[core.scala 237:12]

  module MultiCycleRV32I :
    input clock : Clock
    input reset : UInt<1>
    output io_result : UInt<32>

    inst core of MultiCycleRV32Icore @[MultiCycleRISCV32I.scala 20:20]
    io_result <= core.io_check_res @[MultiCycleRISCV32I.scala 22:19]
    core.clock <= clock
    core.reset <= reset
